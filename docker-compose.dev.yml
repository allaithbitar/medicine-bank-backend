services:
  app:
    container_name: ${APP_CONTAINER_NAME}
    env_file: .env
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_DB: ${POSTGRES_DB}
        POSTGRES_HOST: ${DB_CONTAINER_NAME}
        POSTGRES_PORT: ${POSTGRES_PORT}
        JWT_SECRET: ${JWT_SECRET}
        JWT_TOKEN_EXPIRE: ${JWT_TOKEN_EXPIRE}
        JWT_REFRESH_TOKEN_EXPIRE: ${JWT_REFRESH_TOKEN_EXPIRE}
        PORT: ${PORT}
    ports:
      - ${PORT}:${PORT}
    volumes:
      - .:/app
      - ./node_modules:/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
    stdin_open: true
    tty: true

  postgres:
    container_name: ${DB_CONTAINER_NAME}
    env_file: .env
    image: postgres:14.5
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - medicine_bank_dev_db:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER} -p ${POSTGRES_PORT}",
        ]
      interval: 1s
      timeout: 5s
      retries: 10

volumes:
  medicine_bank_dev_db:
